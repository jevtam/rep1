#include <iostream>
#include <string>
#include <unordered_map>
using namespace std;

string arabicToRoman(int number)
{
    string romanNumerals[] =
    {
        "M",
        "CM",
        "D",
        "CD",
        "C",
        "XC",
        "L",
        "XL",
        "X",
        "IX",
        "V",
        "IV",
        "I"
    };

    int arabicNumerals[] =
    {
        1000,
        900,
        500,
        400,
        100,
        90,
        50,
        40,
        10,
        9,
        5,
        4,
        1
    };

    string result;

    while (number > 0)
    {
        for (int chetchik = 0; chetchik < 13; ++chetchik) {
            if (number >= arabicNumerals[chetchik]){
                number -= arabicNumerals[chetchik];
                result += romanNumerals[chetchik];
                break;
            }
        }
    }

    return result;
}

int romanToArabic(const string& roman)
{
    unordered_map<char, int> value = {
        { 'I', 1 },
        { 'V', 5 },
        { 'X', 10 },
        { 'L', 50 },
        { 'C', 100 },
        { 'D', 500 },
        { 'M', 1000 }
    };

    int result = 0;
    for (size_t chetchik = 0; chetchik < roman.size(); ++chetchik)
    {
        if (chetchik + 1 < roman.size() && value[roman[chetchik]] < value[roman[chetchik + 1]]) {
            result -= value[roman[chetchik]];
        }else {
            result += value[roman[chetchik]];
        }
    }

    return result;
}

int main() {
    int number;
    string roman;
    setlocale(LC_ALL, "Rus");
    cout << "Введите число на арабских цифрах: ";
    cin >> number;
    roman = arabicToRoman(number);

    cout << "Введите число на римских цифрах: ";
    cin >> roman;
    number = romanToArabic(roman);
    cout << "Арабские цифры: " << number << endl<< "Римские цифры: " << roman << endl;

    return 0;
}