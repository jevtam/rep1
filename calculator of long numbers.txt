#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

void inputBigInteger(vector<int>& num) {
    string str;
    cin >> str;
    num.clear();
    for (int i = str.length() - 1; i >= 0; i--) {
        num.push_back(str[i] - '0');
    }
}

void outputBigInteger(const vector<int>& num) {
    for (int i = num.size() - 1; i >= 0; i--) {
        cout << num[i];
    }
    cout << endl;
}

vector<int> add(const vector<int>& num1, const vector<int>& num2) {
    vector<int> result(max(num1.size(), num2.size()) + 1, 0);
    int carry = 0;
    for (int i = 0; i < result.size(); i++) {
        int sum = carry;
        if (i < num1.size()) {
            sum += num1[i];
        }
        if (i < num2.size()) {
            sum += num2[i];
        }
        result[i] = sum % 10;
        carry = sum / 10;
    }
    if (result.back() == 0) {
        result.pop_back();
    }
    return result;
}

vector<int> subtract(const vector<int>& num1, const vector<int>& num2) {
    vector<int> result(num1.size(), 0);
    int borrow = 0;
    for (int i = 0; i < num1.size(); i++) {
        int diff = num1[i] - borrow;
        if (i < num2.size()) {
            diff -= num2[i];
        }
        if (diff < 0) {
            diff += 10;
            borrow = 1;
        }
        else {
            borrow = 0;
        }
        result[i] = diff;
    }
    while (result.back() == 0 && result.size() > 1) {
        result.pop_back();
    }
    return result;
}

vector<int> multiply(const vector<int>& num1, const vector<int>& num2) {
    vector<int> result(num1.size() + num2.size(), 0);
    for (int i = 0; i < num1.size(); i++) {
        int carry = 0;
        for (int j = 0; j < num2.size(); j++) {
            int sum = result[i + j] + num1[i] * num2[j] + carry;
            result[i + j] = sum % 10;
            carry = sum / 10;
        }
        if (carry > 0) {
            result[i + num2.size()] += carry;
        }
    }
    while (result.back() == 0 && result.size() > 1) {
        result.pop_back();
    }
    return result;
}

int compare(const vector<int>& num1, const vector<int>& num2) {
    if (num1.size() > num2.size()) {
        return 1;
    }
    else if (num1.size() < num2.size()) {
        return -1;
    }
    for (int i = num1.size() - 1; i >= 0; i--) {
        if (num1[i] > num2[i]) {
            return 1;
        }
        else if (num1[i] < num2[i]) {
            return -1;
        }
    }
    return 0;
}

int main() {
    vector<int> num1, num2;
    setlocale(LC_ALL, "Rus");

    cout << "Введите первое число: ";
    inputBigInteger(num1);

    cout << "Введите второе число: ";
    inputBigInteger(num2);

    vector<int> sum = add(num1, num2);
    cout << "Сумма: ";
    outputBigInteger(sum);

    vector<int> diff = subtract(num1, num2);
    cout << "Разность: ";
    outputBigInteger(diff);

    vector<int> product = multiply(num1, num2);
    cout << "Произведение: ";
    outputBigInteger(product);

    return 0;
}